version: "3.9"

services:
  gateway:
    build:
      context: ../
      dockerfile: configs/docker/Dockerfile.gateway
    environment:
      - GATEWAY_LISTEN_ADDR=:8080
      - GATEWAY_QUEUE_BASE_URL=http://localhost:8080
      - GATEWAY_ORCHESTRATOR_URL=http://orchestrator:8084
    ports:
      - "8080:8080"
    depends_on:
      - orchestrator

  orchestrator:
    build:
      context: ../
      dockerfile: configs/docker/Dockerfile.orchestrator
    environment:
      - RUST_LOG=info
      - REDIS_URL=redis://redis:6379
      - PORT=8084
      - ORCHESTRATOR_DATABASE_URL=postgres://vyvo:vyvo@postgres:5432/vyvo?sslmode=disable
      - CONTROL_PLANE_URL=http://control_plane:3002
    ports:
      - "8084:8084"
    depends_on:
      - redis

  workflow_engine:
    build:
      context: ../
      dockerfile: configs/docker/Dockerfile.workflow
    ports:
      - "8082:8082"
    depends_on:
      - orchestrator

  admin_rest:
    build:
      context: ../
      dockerfile: configs/docker/Dockerfile.admin
    environment:
      - ADMIN_REST_ADDR=:8083
      - REDIS_URL=redis://redis:6379
      - ORCHESTRATOR_URL=http://orchestrator:8084
      - ADMIN_REST_DATABASE_URL=postgres://vyvo:vyvo@postgres:5432/vyvo?sslmode=disable
    ports:
      - "8083:8083"
    depends_on:
      - redis
      - orchestrator
      - postgres

  builder:
    build:
      context: ../
      dockerfile: configs/docker/Dockerfile.builder
    environment:
      - BUILDER_ADDR=:8085
      - BUILDER_DATABASE_URL=postgres://vyvo:vyvo@postgres:5432/vyvo?sslmode=disable
      - BUILDER_REGISTRY_URL=http://admin_rest:8083
    ports:
      - "8085:8085"
    depends_on:
      - postgres
      - admin_rest

  webhook_dispatcher:
    build:
      context: ../
      dockerfile: configs/docker/Dockerfile.webhook
    depends_on:
      - orchestrator

  control_plane:
    build:
      context: ../
      dockerfile: configs/docker/Dockerfile.control-plane
    environment:
      - CONTROL_PLANE_ADDR=:3002
      - CONTROL_PLANE_DATA=/var/lib/vyvo/nodes.json
      - REDIS_URL=redis://redis:6379
      - CONTROL_PLANE_DATABASE_URL=postgres://vyvo:vyvo@postgres:5432/vyvo?sslmode=disable
    volumes:
      - control_plane_data:/var/lib/vyvo
    ports:
      - "3002:3002"
    depends_on:
      - redis
      - postgres

  flux_runner:
    build:
      context: ../..
      dockerfile: backend/runner-flux/Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - VYVO_MODEL_ID=black-forest-labs/FLUX.1-dev
      - VYVO_NODE_ID=c98bc605-34aa-4a5f-be52-2c6156635ce9
      - FLUX_ENABLE_DIFFUSERS=0
    depends_on:
      - redis
    ports:
      - "9010:9010"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=vyvo
      - POSTGRES_USER=vyvo
      - POSTGRES_PASSWORD=vyvo
    ports:
      - "5432:5432"

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --address ":9000" --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=vyvo
      - MINIO_ROOT_PASSWORD=password
    ports:
      - "9000:9000"
      - "9012:9001"

  otel_collector:
    image: otel/opentelemetry-collector:0.99.0
    command: ["--config=/etc/otel-config.yaml"]
    volumes:
      - ../configs/otel/otel-config.yaml:/etc/otel-config.yaml
    depends_on:
      - gateway
      - orchestrator

  ngrok-minio:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "http"
      - "--log=stdout"
      - "minio:9000"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    depends_on:
      - minio

volumes:
  postgres_data:
  minio_data:
  control_plane_data:
